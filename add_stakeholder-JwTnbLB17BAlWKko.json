{"createdAt":"2025-06-09T11:11:44.166Z","updatedAt":"2025-07-11T20:31:48.000Z","id":"JwTnbLB17BAlWKko","name":"add_stakeholder","active":true,"isArchived":false,"nodes":[{"parameters":{"jsCode":"return items.map(item => {\n  const rawCnpj = item.json.body.documento || '';\n  const digitsOnly = rawCnpj.replace(/\\D/g, ''); // remove tudo que não é número\n\n  const cnpjBasico = digitsOnly.slice(0, 8);\n  const cnpjOrdem = digitsOnly.slice(8, 12);\n  const cnpjDv = digitsOnly.slice(12, 14);\n\n  return {\n    json: {\n      ...item.json,\n      cnpj_basico: cnpjBasico,\n      cnpj_ordem: cnpjOrdem,\n      cnpj_dv: cnpjDv\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[360,400],"id":"22f3346c-4646-4de4-9d27-7c1c2a462d40","name":"CNPJ-basico"},{"parameters":{"url":"https://api.escavador.com/api/v2/envolvido/processos","sendQuery":true,"queryParameters":{"parameters":[{"name":"cpf_cnpj","value":"={{ $json.body.documento }}  "},{"name":"data_minima","value":"={{ new Date(new Date().setFullYear(new Date().getFullYear() - 3)).toISOString().split('T')[0] }}"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZTU0N2UxZDc0M2E0YjcxYzZkNmVjZTEzNzhkNzNlYTY1OTYyOGJhYjYyNmQ1ODA2ZmQyMzQyMDRjOTgyNTU4MjkxODgyMDYyYmVjNzFjZjQiLCJpYXQiOjE3MzAzMTI4MjYuNzUyNDEzLCJuYmYiOjE3MzAzMTI4MjYuNzUyNDE1LCJleHAiOjIwNDU4NDU2MjYuNzQ4NjYyLCJzdWIiOiIxODg2NTk2Iiwic2NvcGVzIjpbImFjZXNzYXJfYXBpX3BhZ2EiXX0.rYtSjo03QTBmCN25gKD1tkvvLMBnwE8o8QlUK26-oNGRKaXU8YWSgFga8dzEh-b3arfl9iwX8wAnck5kb8h1iD7AGj_0WEtiapA0Q14tcs3NbVHl_qHT6o7D8mpus7RzlQUdM1iGlqSasOBNQOdTnnV4TXP9-LlsGn2uTGiegaQQGSWv9YR919FArLOaiqvZxu6VDYhUFCzzf7GboxfLnz5md1xsTY1LwQJGqetvFJXbnVPjDGVlJdLNHc2WBvK7NduirmD_f_8KJlXLWTxP7OGBpE9R57nEo2AyHcjOpdJZo5A0bcpsB99FH46cbHiZCZ5H01NL39AOuAGillSP32MUdMLu9nhPKXUg9oGOGrbfBrW8QoFhqWAg9GmwffVj_NbKP8vyeN1iTgScHMBN3OGotSrPQkA-vCT6ZxtJWyJrBcMs27TrJr5tYu-0XP95f-33Pvb5eG58CYouk8du7iHvJ-PwJUbGC-hNXzL5sHQDfeh9kIg1kOg7uBQzBSsspbIB6r0vsbNpxcTcz6LrGt1uW4WWMn6UxmYE941jBbq8JZZC2vunErl-oUjDiTdGqX5_zk9s1kCRKKF1yr6QFWbDzcF27neDEDKXSo1iy-wKOG-P9h8M2D_Hyk2iNUD4igAbcT4blpsiVOP01IR7NsLG60dwc1zVo2pZ1eJU8tI"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[900,-420],"id":"5cd038ce-741c-4ea4-ad7a-e9adb802bd76","name":"HTTP Request"},{"parameters":{"jsCode":"// --- INÍCIO DO CÓDIGO CORRIGIDO E ROBUSTO ---\n\nconst advogadosMap = new Map();\n\n// --- FUNÇÃO AUXILIAR PARA NORMALIZAR NOMES ---\n// Remove acentos, converte para maiúsculas e limpa sufixos comuns.\nfunction normalizarNome(str) {\n  if (!str) return '';\n  return str\n    .toUpperCase() // 1. Converte para maiúsculas\n    .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") // 2. Remove acentos\n    .replace(/LIMITADA|LTDA|EIRELI|EPP|ME/g, '') // 3. Remove sufixos comuns\n    .replace(/[^\\w\\s]/gi, '') // 4. Remove pontuações\n    .trim(); // 5. Remove espaços extras\n}\n\n\n// Função auxiliar para adicionar e deduplicar advogados\nfunction adicionarAdvogado(advogado) {\n  if (!advogado || !advogado.nome) return;\n  const chaveUnica = advogado.cpf || advogado.nome;\n  if (!advogadosMap.has(chaveUnica)) {\n    advogadosMap.set(chaveUnica, advogado);\n  }\n}\n\ntry {\n  const inputItem = items[0];\n  if (!inputItem || !inputItem.json) throw new Error(\"Entrada (items) inválida ou vazia.\");\n\n  const apiData = Array.isArray(inputItem.json) ? inputItem.json[0] : inputItem.json;\n  if (!apiData || !apiData.items || !apiData.envolvido_encontrado) {\n    throw new Error(\"Formato de dados da API inválido.\");\n  }\n\n  const listaDeProcessos = apiData.items;\n  // Normaliza o nome da empresa alvo UMA VEZ\n  const nomeAlvoNormalizado = normalizarNome(apiData.envolvido_encontrado.nome);\n\n  // --- LÓGICA DE EXTRAÇÃO COM COMPARAÇÃO NORMALIZADA ---\n  for (const processo of listaDeProcessos) {\n    if (!processo.fontes || !Array.isArray(processo.fontes)) continue;\n    for (const fonte of processo.fontes) {\n      if (!fonte.envolvidos || !Array.isArray(fonte.envolvidos)) continue;\n      \n      for (const envolvido of fonte.envolvidos) {\n        // Compara os nomes DEPOIS de normalizá-los\n        const nomeEnvolvidoNormalizado = normalizarNome(envolvido.nome);\n\n        if (nomeEnvolvidoNormalizado === nomeAlvoNormalizado) {\n          // Se a empresa foi encontrada, adiciona seus advogados aninhados\n          if (Array.isArray(envolvido.advogados) && envolvido.advogados.length > 0) {\n            envolvido.advogados.forEach(adicionarAdvogado);\n          }\n        }\n      }\n    }\n  }\n\n  const resultadoFinal = Array.from(advogadosMap.values());\n\n  if (resultadoFinal.length === 0) {\n    return [{ json: { message: \"Nenhum advogado com vínculo direto (aninhado) foi encontrado para a empresa: \" + apiData.envolvido_encontrado.nome } }];\n  }\n\n  return resultadoFinal.map(adv => ({ json: adv }));\n\n} catch (error) {\n  return [{ json: { error: true, message: error.message, stack: error.stack } }];\n}\n\n// --- FIM DO CÓDIGO CORRIGIDO E ROBUSTO ---"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1140,-420],"id":"cbde607f-6072-42df-b904-fcca56f7cbc3","name":"Code","alwaysOutputData":false,"notesInFlow":false},{"parameters":{"url":"https://api.escavador.com/api/v2/advogado/processos","sendQuery":true,"queryParameters":{"parameters":[{"name":"oab_numero","value":"={{ $json.oabs[0].numero }}"},{"name":"data_minima","value":"={{ new Date(new Date().setFullYear(new Date().getFullYear() - 3)).toISOString().split('T')[0] }}"},{"name":"oab_estado","value":"={{ $json.oabs[0].uf }}"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZTU0N2UxZDc0M2E0YjcxYzZkNmVjZTEzNzhkNzNlYTY1OTYyOGJhYjYyNmQ1ODA2ZmQyMzQyMDRjOTgyNTU4MjkxODgyMDYyYmVjNzFjZjQiLCJpYXQiOjE3MzAzMTI4MjYuNzUyNDEzLCJuYmYiOjE3MzAzMTI4MjYuNzUyNDE1LCJleHAiOjIwNDU4NDU2MjYuNzQ4NjYyLCJzdWIiOiIxODg2NTk2Iiwic2NvcGVzIjpbImFjZXNzYXJfYXBpX3BhZ2EiXX0.rYtSjo03QTBmCN25gKD1tkvvLMBnwE8o8QlUK26-oNGRKaXU8YWSgFga8dzEh-b3arfl9iwX8wAnck5kb8h1iD7AGj_0WEtiapA0Q14tcs3NbVHl_qHT6o7D8mpus7RzlQUdM1iGlqSasOBNQOdTnnV4TXP9-LlsGn2uTGiegaQQGSWv9YR919FArLOaiqvZxu6VDYhUFCzzf7GboxfLnz5md1xsTY1LwQJGqetvFJXbnVPjDGVlJdLNHc2WBvK7NduirmD_f_8KJlXLWTxP7OGBpE9R57nEo2AyHcjOpdJZo5A0bcpsB99FH46cbHiZCZ5H01NL39AOuAGillSP32MUdMLu9nhPKXUg9oGOGrbfBrW8QoFhqWAg9GmwffVj_NbKP8vyeN1iTgScHMBN3OGotSrPQkA-vCT6ZxtJWyJrBcMs27TrJr5tYu-0XP95f-33Pvb5eG58CYouk8du7iHvJ-PwJUbGC-hNXzL5sHQDfeh9kIg1kOg7uBQzBSsspbIB6r0vsbNpxcTcz6LrGt1uW4WWMn6UxmYE941jBbq8JZZC2vunErl-oUjDiTdGqX5_zk9s1kCRKKF1yr6QFWbDzcF27neDEDKXSo1iy-wKOG-P9h8M2D_Hyk2iNUD4igAbcT4blpsiVOP01IR7NsLG60dwc1zVo2pZ1eJU8tI"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1460,-420],"id":"05e7013a-81f0-4a49-bb7c-efc095c0dbd5","name":"HTTP Request1","onError":"continueRegularOutput"},{"parameters":{"jsCode":"// Usamos um Map para agrupar os clientes de forma organizada pelo advogado consultado.\nconst advogadosMap = new Map();\n\n// Função auxiliar para remover acentos de uma string\nconst normalizarNome = (str) => {\n  if (!str) return '';\n  return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toUpperCase().trim();\n};\n\n// Itera sobre cada item da entrada (cada item = resultado de uma busca por advogado).\nfor (const item of $input.all()) {\n  // Acessa o objeto json dentro de cada item de entrada.\n  const dados = item.json; \n\n  // Garante que os dados do advogado consultado existam.\n  if (!dados.advogado_encontrado || !dados.advogado_encontrado.nome) {\n    continue;\n  }\n  \n  // NOME ORIGINAL: Mantemos para usar como chave do Map e na saída.\n  const nomeOriginalAdvogado = dados.advogado_encontrado.nome;\n  // NOME NORMALIZADO: Usamos para fazer as comparações.\n  const nomeAdvogadoConsultadoNormalizado = normalizarNome(nomeOriginalAdvogado);\n\n  // Se for a primeira vez que vemos este advogado, inicializa sua estrutura no Map.\n  if (!advogadosMap.has(nomeOriginalAdvogado)) {\n    advogadosMap.set(nomeOriginalAdvogado, {\n      advogado_consultado: nomeOriginalAdvogado,\n      cpf: null,\n      oabs: [],\n      dados_encontrados: false,\n      clientes: {\n        pessoa_fisica: [],\n        pessoa_juridica: []\n      },\n      clientesVistos: new Set()\n    });\n  }\n\n  // Pega a estrutura de dados do advogado atual.\n  const infoAdvogado = advogadosMap.get(nomeOriginalAdvogado);\n\n  // Navega pela estrutura para encontrar clientes.\n  if (dados.items) {\n    for (const processo of dados.items) {\n      if (processo.fontes) {\n        for (const fonte of processo.fontes) {\n          if (fonte.envolvidos) {\n            for (const envolvido of fonte.envolvidos) {\n              if (envolvido.advogados && envolvido.advogados.length > 0) {\n                \n                // *** A CORREÇÃO ESTÁ AQUI ***\n                // Compara os nomes NORMALIZADOS (sem acento e em maiúsculas).\n                const advogadoNoCliente = envolvido.advogados.find(\n                  adv => normalizarNome(adv.nome) === nomeAdvogadoConsultadoNormalizado\n                );\n\n                if (advogadoNoCliente) {\n                  // Captura os dados do advogado (OAB, CPF) apenas uma vez.\n                  if (!infoAdvogado.dados_encontrados && (advogadoNoCliente.oabs || advogadoNoCliente.cpf)) {\n                    infoAdvogado.oabs = advogadoNoCliente.oabs || [];\n                    infoAdvogado.cpf = advogadoNoCliente.cpf || null;\n                    infoAdvogado.dados_encontrados = true;\n                  }\n\n                  // Lógica para adicionar o cliente (sem alterações).\n                  const idCliente = envolvido.cpf || envolvido.cnpj;\n                  if (idCliente && !infoAdvogado.clientesVistos.has(idCliente)) {\n                    if (envolvido.tipo_pessoa === 'FISICA') {\n                      infoAdvogado.clientes.pessoa_fisica.push({\n                        nome: envolvido.nome,\n                        cpf: envolvido.cpf\n                      });\n                    } else if (envolvido.tipo_pessoa === 'JURIDICA') {\n                      infoAdvogado.clientes.pessoa_juridica.push({\n                        nome: envolvido.nome,\n                        cnpj: envolvido.cnpj\n                      });\n                    }\n                    infoAdvogado.clientesVistos.add(idCliente);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n// Converte os valores do Map em um array para ser a saída final.\nconst resultadoFinal = Array.from(advogadosMap.values());\n\n// Remove as propriedades auxiliares para uma saída limpa.\nresultadoFinal.forEach(adv => {\n  delete adv.clientesVistos;\n  delete adv.dados_encontrados;\n});\n\n// Retorna o resultado final.\nreturn resultadoFinal || null;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1900,-420],"id":"a9ed6761-5d32-4f2e-bff0-ff1fd806319a","name":"Retorno Clientes","alwaysOutputData":true,"onError":"continueRegularOutput"},{"parameters":{"workflowId":{"__rl":true,"value":"qITLq5vYPesje8e9","mode":"list","cachedResultName":"Adicionar Advogados e relacionados"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"mode":"each","options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[3060,-400],"id":"3cd97652-cd7b-47a4-8744-5ad68195f61b","name":"Adiciona advogado e relacionados","onError":"continueRegularOutput"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[1740,380],"id":"a99fcb3a-0a16-494e-ac98-e823e3a1ee76","name":"Merge"},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[800,160],"id":"ed79a8c9-c7c2-4b96-9f57-6a2d452ffd18","name":"Merge1"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO plataforma_stakeholders.empresa (\n    cnpj,\n    razao_social,\n    nome_fantasia,\n    porte_id,\n    stakeholder,\n    data_fundacao,\n    situacao_cadastral,\n    natureza_juridica_descricao,\n    matriz,\n    ramo,\n    ultima_atualizacao_pj,\n    projeto_id,\n    usuario_id\n)\nVALUES (\n    {{ $json.cnpj_basico ? \"'\" + $json.cnpj_basico + $json.cnpj_ordem + $json.cnpj_dv + \"'\" : \"NULL\" }},\n    {{ $json.razao_social ? \"'\" + $json.razao_social.toString().replace(/'/g, \"''\") + \"'\" : \"NULL\" }},\n    {{ $json.nome_fantasia ? \"'\" + $json.nome_fantasia.toString().replace(/'/g, \"''\") + \"'\" : \"NULL\" }},\n    {{ $json.porte_empresa ?? 'NULL' }},\n    {{ true }},\n    {{ $json.data_inicio_atividades ? \"'\" + $json.data_inicio_atividades + \"'\" : \"NULL\" }},\n    {{ $json.situacao_cadastral ? \"'\" + $json.situacao_cadastral + \"'\" : \"NULL\" }},\n    {{ $json.natureza_juridica ? \"'\" + $json.natureza_juridica.toString().replace(/'/g, \"''\") + \"'\" : \"NULL\" }},\n    {{ $json.matriz_filial === '1' }},\n    {{ $json.cnae_fiscal ? \"'\" + $json.cnae_fiscal + \"'\" : \"NULL\" }},\n    {{ $json.data_situacao_cadastral ? \"'\" + $json.data_situacao_cadastral + \"'\" : \"NULL\" }},\n    {{ $('Webhook').item.json.body.projeto_id }},\n    '{{ $('Webhook').item.json.body.usuario_id }}'\n)\nON CONFLICT (usuario_id, cnpj) DO UPDATE SET\n    razao_social = EXCLUDED.razao_social,\n    nome_fantasia = EXCLUDED.nome_fantasia,\n    porte_id = EXCLUDED.porte_id,\n    stakeholder = EXCLUDED.stakeholder,\n    data_fundacao = EXCLUDED.data_fundacao,\n    situacao_cadastral = EXCLUDED.situacao_cadastral,\n    natureza_juridica_descricao = EXCLUDED.natureza_juridica_descricao,\n    matriz = EXCLUDED.matriz,\n    ramo = EXCLUDED.ramo,\n    ultima_atualizacao_pj = EXCLUDED.ultima_atualizacao_pj,\n    projeto_id = EXCLUDED.projeto_id,\n    usuario_id = EXCLUDED.usuario_id;\n","options":{"replaceEmptyStrings":false}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1000,160],"id":"cde22681-a848-4946-b1dc-36f4efdb97c2","name":"Adiciona Empresa","credentials":{"postgres":{"id":"YNOTWNzTchEo0E2q","name":"Postgres account"}}},{"parameters":{"mode":"chooseBranch","useDataOfInput":2},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[2820,360],"id":"aa17f225-805f-408d-b40c-9a94d4bbfd64","name":"Merge2"},{"parameters":{"operation":"select","schema":{"__rl":true,"value":"=cnpj_db","mode":"name"},"table":{"__rl":true,"value":"estabelecimento","mode":"list","cachedResultName":"estabelecimento"},"where":{"values":[{"column":"cnpj_basico","value":"={{ $json.cnpj_basico }}"},{"column":"cnpj_ordem","value":"={{ $json.cnpj_ordem }}"},{"column":"cnpj_dv","value":"={{ $json.cnpj_dv }}"}]},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[580,80],"id":"c29940c7-a289-40ad-9ff5-fe2bb424c150","name":"Dados empresa","credentials":{"postgres":{"id":"06H9yc1itfgY06q4","name":"postgres supabase"}}},{"parameters":{"operation":"select","schema":{"__rl":true,"value":"=cnpj_db","mode":"name"},"table":{"__rl":true,"value":"empresas","mode":"list","cachedResultName":"empresas"},"where":{"values":[{"column":"cnpj_basico","value":"={{ $json.cnpj_basico }}"}]},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[580,240],"id":"998e76e3-641d-423e-a204-e55ff67d5130","name":"Dados empresa 2","credentials":{"postgres":{"id":"06H9yc1itfgY06q4","name":"postgres supabase"}}},{"parameters":{"operation":"executeQuery","query":"SELECT *\nFROM plataforma_stakeholders.pessoa\nWHERE UPPER(firstname) = UPPER('{{ $json.nome_socio.split(\" \")[0]}}')\n  AND UPPER(lastname) = UPPER('{{ $json.nome_socio.split(\" \").slice(1).join(\" \") }}')\n  AND SUBSTRING(cpf FROM 4 FOR 6) = SUBSTRING('{{ $json.cnpj_cpf_socio }}' FROM 4 FOR 6)\n  AND usuario_id = '{{ $('Webhook').item.json.body.usuario_id }}';","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3020,360],"id":"794c80e3-a192-4e74-9918-3bf5db03f0c7","name":"ID's socios","credentials":{"postgres":{"id":"YNOTWNzTchEo0E2q","name":"Postgres account"}}},{"parameters":{"operation":"select","schema":{"__rl":true,"value":"plataforma_stakeholders","mode":"list","cachedResultName":"plataforma_stakeholders"},"table":{"__rl":true,"value":"empresa","mode":"list","cachedResultName":"empresa"},"where":{"values":[{"column":"cnpj","value":"={{ $('CNPJ-basico').first().json.body.documento.replace(/[\\/\\.\\-]/g, '') }}"},{"column":"usuario_id","value":"={{ $('Webhook').item.json.body.usuario_id }}"}]},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2540,260],"id":"c43053e6-7ed8-4d52-9079-25be3c01698f","name":"Dados Stakeholder","credentials":{"postgres":{"id":"YNOTWNzTchEo0E2q","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"INSERT INTO plataforma_stakeholders.relacionamentos (\n    entidade_origem_id,\n    tipo_origem_id,\n    entidade_destino_id,\n    tipo_destino_id,\n    tipo_relacao_id,\n    usuario_id\n)\nVALUES ({{ $('Dados Stakeholder').first().json.empresa_id }}, 3, {{ $json.pessoa_id }}, 1, 25, '{{ $('Webhook').item.json.body.usuario_id}}')\nON CONFLICT (entidade_origem_id, tipo_origem_id, entidade_destino_id, tipo_destino_id, tipo_relacao_id, usuario_id)\nDO NOTHING;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3320,500],"id":"7641c769-79f6-477d-aee1-c56cf8a51400","name":"relacionamento_stakeholder_socio","credentials":{"postgres":{"id":"YNOTWNzTchEo0E2q","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT DISTINCT\n  s.nome_socio,\n  s.cnpj_cpf_socio,\n  s.identificador_de_socio,\n  sq.descricao AS qualificacao,\n  s.data_entrada_sociedade,\n  s.faixa_etaria\nFROM cnpj_db.socios s\nLEFT JOIN cnpj_db.qualificacao_socio sq ON s.qualificacao_socio = sq.codigo::text\nWHERE s.cnpj_basico = '{{$('CNPJ-basico').item.json.cnpj_basico}}'\n  AND s.identificador_de_socio = '2'\nORDER BY s.nome_socio;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1940,380],"id":"9a49cf6e-4dc5-4a7f-b8a7-e8fe8bc23358","name":"Sócios","executeOnce":true,"credentials":{"postgres":{"id":"06H9yc1itfgY06q4","name":"postgres supabase"}}},{"parameters":{"operation":"executeQuery","query":"INSERT INTO plataforma_stakeholders.pessoa (firstname, lastname, cpf, usuario_id)\nSELECT\n  '{{ $json.nome_socio.split(\" \")[0] }}',\n  '{{ $json.nome_socio.split(\" \").slice(1).join(\" \") }}',\n  '{{ $json.cnpj_cpf_socio }}',\n  '{{ $(\"Webhook\").item.json.body.usuario_id }}'\nWHERE NOT EXISTS (\n  SELECT 1\n  FROM plataforma_stakeholders.pessoa\n  WHERE\n    UPPER(firstname) = UPPER('{{ $json.nome_socio.split(\" \")[0] }}')\n    AND UPPER(lastname) = UPPER('{{ $json.nome_socio.split(\" \").slice(1).join(\" \") }}')\n    AND SUBSTRING(cpf FROM 4 FOR 6) = SUBSTRING('{{ $json.cnpj_cpf_socio }}' FROM 4 FOR 6)\n    AND usuario_id = '{{ $(\"Webhook\").item.json.body.usuario_id }}'\n);\n","options":{"queryBatching":"independently"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2220,260],"id":"e014850b-600f-4e7e-b317-cdb0b15b4162","name":"Adiciona Sócios","credentials":{"postgres":{"id":"YNOTWNzTchEo0E2q","name":"Postgres account"}}},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[3560,360],"id":"2c11417b-6b9c-48d5-8570-7a6fde61d690","name":"Merge3"},{"parameters":{"mode":"chooseBranch","useDataOfInput":2},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[4380,20],"id":"5e8cac77-899a-45fc-b2ff-d671b1ff9bd1","name":"Merge4"},{"parameters":{"workflowId":{"__rl":true,"value":"iCVMoFh7xlh1KA1y","mode":"list","cachedResultName":"Socio-empresa"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"mode":"each","options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[3320,240],"id":"dcde2c7b-471f-443c-8cc1-7028b1e4bf9b","name":"Socio-empresa"},{"parameters":{"httpMethod":"POST","path":"add_stakeholder","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-340,100],"id":"c42e649e-9943-4719-8c62-240c7d127ea5","name":"Webhook","webhookId":"7cbfeb5c-f3cd-4ef3-b2c3-b849f9770330"},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[2680,-400],"id":"906e85cb-7d4a-4883-a144-0727b5a34dda","name":"Merge5","onError":"continueRegularOutput"},{"parameters":{"assignments":{"assignments":[{"id":"c7ea7fac-b7f9-42de-964d-274efe4441fb","name":"node_id","value":"={{ $('Dados Banco Empresa').item.json.empresa_id }}","type":"number"},{"id":"56f5cc7b-30dc-4923-a72e-7f0a76fdf178","name":"usuario_id","value":"={{ $('Webhook').item.json.body.usuario_id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1820,-60],"id":"b2c6b9f4-91c8-4241-b7fe-a768e0e71bf8","name":"Edit Fields"},{"parameters":{"operation":"select","schema":{"__rl":true,"value":"plataforma_stakeholders","mode":"list","cachedResultName":"plataforma_stakeholders"},"table":{"__rl":true,"value":"empresa","mode":"list","cachedResultName":"empresa"},"where":{"values":[{"column":"cnpj","value":"={{ $('Dados empresa').first().json.cnpj_basico+$('Dados empresa').first().json.cnpj_ordem +$('Dados empresa').first().json.cnpj_dv }}"}]},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1280,-60],"id":"9770201a-8f38-40fa-9c4e-4760cf47c2e2","name":"Dados Banco Empresa","credentials":{"postgres":{"id":"YNOTWNzTchEo0E2q","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"INSERT INTO plataforma_stakeholders.enderecos (\n    usuario_id,\n    entidade_id,\n    tipo_entidade_id,\n    endereco_id,\n    logradouro,\n    numero,\n    complemento,\n    bairro,\n    cidade,\n    uf,\n    cep\n)\nVALUES (\n    '{{ $('Webhook').item.json.body.usuario_id }}',\n    {{ $json.empresa_id }},\n    3,\n    1,\n    {{ $('Merge1').first().json.logradouro ? `'${$('Merge1').first().json.logradouro.replace(/'/g, \"''\")}'` : 'NULL' }},\n    {{ $('Merge1').first().json.numero ? `'${$('Merge1').first().json.numero.replace(/'/g, \"''\")}'` : 'NULL' }},\n    {{ $('Merge1').first().json.complemento ? `'${$('Merge1').first().json.complemento.replace(/'/g, \"''\")}'` : 'NULL' }},\n    {{ $('Merge1').first().json.bairro ? `'${$('Merge1').first().json.bairro.replace(/'/g, \"''\")}'` : 'NULL' }},\n    {{ $('Merge1').first().json.municipio ? `'${$('Merge1').first().json.municipio.replace(/'/g, \"''\")}'` : 'NULL' }},\n    {{ $('Merge1').first().json.uf ? `'${$('Merge1').first().json.uf.replace(/'/g, \"''\")}'` : 'NULL' }},\n    {{ $('Merge1').first().json.cep ? `'${$('Merge1').first().json.cep.replace(/'/g, \"''\")}'` : 'NULL' }}\n)\nON CONFLICT (usuario_id, entidade_id) DO NOTHING;\n","options":{"replaceEmptyStrings":false}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1540,-60],"id":"fba89d2d-4f7e-4402-8774-1e65456a52c1","name":"Adiciona endereço","credentials":{"postgres":{"id":"YNOTWNzTchEo0E2q","name":"Postgres account"}}},{"parameters":{"operation":"select","schema":{"__rl":true,"value":"plataforma_stakeholders","mode":"list","cachedResultName":"plataforma_stakeholders"},"table":{"__rl":true,"value":"empresa","mode":"list","cachedResultName":"empresa"},"where":{"values":[{"column":"cnpj","value":"={{ $('CNPJ-basico').first().json.cnpj_basico + $('CNPJ-basico').first().json.cnpj_ordem + $('CNPJ-basico').first().json.cnpj_dv }}"}]},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[4660,20],"id":"86dac841-92ad-4056-9803-5599e9d3a4cf","name":"Postgres","executeOnce":true,"credentials":{"postgres":{"id":"YNOTWNzTchEo0E2q","name":"Postgres account"}}},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"body\": {\n    \"node_id\": \"{{ $json.empresa_id }}\",\n    \"node_type\": \"Empresa\",\n    \"documento\": \"{{ $json.cnpj }}\",\n    \"nome\": \"{{ $json.razao_social }}\",\n    \"instagram\": \"{{ $json.instagram }}\",\n    \"usuario_id\": \"{{ $json.usuario_id }}\",\n    \"properties\": {\n      \"nome_fantasia\": \"{{ $json.nome_fantasia }}\",\n      \"segmento_id\": \"{{ $json.segmento_id }}\",\n      \"quantidade_funcionarios\": \"{{ $json.quantidade_funcionarios }}\",\n      \"tipo_empresa\": \"{{ $json.tipo_empresa }}\",\n      \"linkedin\": \"{{ $json.linkedin }}\",\n      \"codigo_natureza_juridica\": \"{{ $json.codigo_natureza_juridica }}\",\n      \"ultima_atualizacao_pj\": \"{{ $json.ultima_atualizacao_pj }}\",\n      \"cnpj\": \"{{ $json.cnpj }}\",\n      \"instagram\": \"{{ $json.instagram }}\",\n      \"natureza_juridica_descricao\": \"{{ $json.natureza_juridica_descricao }}\",\n      \"natureza_juridica_tipo\": \"{{ $json.natureza_juridica_tipo }}\",\n      \"razao_social\": \"{{ $json.razao_social }}\",\n      \"stakeholder\": \"{{ $json.stakeholder }}\",\n      \"faixa_funcionarios\": \"{{ $json.faixa_funcionarios }}\",\n      \"projeto_id\": \"{{ $json.projeto_id }}\",\n      \"empresa_id\": \"{{ $json.empresa_id }}\",\n      \"em_prospecao\": \"{{ $json.em_prospecao }}\",\n      \"faixa_faturamento\": \"{{ $json.faixa_faturamento }}\",\n      \"matriz\": \"{{ $json.matriz }}\",\n      \"orgao_publico\": \"{{ $json.orgao_publico }}\",\n      \"data_fundacao\": \"{{ $json.data_fundacao }}\",\n      \"porte_id\": \"{{ $json.porte_id }}\",\n      \"situacao_cadastral\": \"{{ $json.situacao_cadastral }}\",\n      \"ramo\": \"{{ $json.ramo }}\",\n      \"projeto_nome\": null,\n      \"usuario_id\": \"{{ $json.usuario_id }}\"\n    }\n  }\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[4880,20],"id":"6f6dfcc0-b592-4411-9c63-afe993d8b55f","name":"Padroniza campos"},{"parameters":{"mode":"chooseBranch","useDataOfInput":2},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[5360,0],"id":"1bc5a707-5fd8-4368-aac0-13afa8c26247","name":"Merge6"},{"parameters":{"workflowId":{"__rl":true,"value":"p1Q9Rvecw7lM3TkV","mode":"list","cachedResultName":"webhook_instagram_buscar_individual"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"mode":"each","options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[5100,-120],"id":"c5dd4ce0-602c-467b-9cf0-44f311b9369e","name":"Busca Instagram"},{"parameters":{"workflowId":{"__rl":true,"value":"Zs3HnLMQXLGYMTiP","mode":"list","cachedResultName":"webhook_instagram_buscar_relacionados"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[5540,0],"id":"fd9c7526-212a-487f-990f-f7ddc3f9ca84","name":"Busca Relacionados"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1de163e8-dbf3-4fe9-9381-d1e0efae20e1","leftValue":"={{ $json }}","rightValue":"","operator":{"type":"object","operation":"empty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2120,-420],"id":"7c7fd1a6-85a4-49ee-b884-6f9076359c69","name":"If"}],"connections":{"CNPJ-basico":{"main":[[{"node":"Merge","type":"main","index":1},{"node":"Dados empresa","type":"main","index":0},{"node":"Dados empresa 2","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"HTTP Request1","type":"main","index":0}]]},"HTTP Request1":{"main":[[{"node":"Retorno Clientes","type":"main","index":0}]]},"Retorno Clientes":{"main":[[{"node":"If","type":"main","index":0}]]},"Adiciona advogado e relacionados":{"main":[[{"node":"Merge4","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Sócios","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"Adiciona Empresa","type":"main","index":0}]]},"Adiciona Empresa":{"main":[[{"node":"Merge","type":"main","index":0},{"node":"Dados Banco Empresa","type":"main","index":0}]]},"Merge2":{"main":[[{"node":"ID's socios","type":"main","index":0}]]},"Dados empresa":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"Dados empresa 2":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"ID's socios":{"main":[[{"node":"Socio-empresa","type":"main","index":0},{"node":"relacionamento_stakeholder_socio","type":"main","index":0}]]},"Dados Stakeholder":{"main":[[{"node":"Merge2","type":"main","index":0}]]},"relacionamento_stakeholder_socio":{"main":[[{"node":"Merge3","type":"main","index":1}]]},"Sócios":{"main":[[{"node":"Adiciona Sócios","type":"main","index":0},{"node":"Merge2","type":"main","index":1}]]},"Adiciona Sócios":{"main":[[{"node":"Dados Stakeholder","type":"main","index":0}]]},"Merge3":{"main":[[{"node":"Merge4","type":"main","index":1}]]},"Socio-empresa":{"main":[[{"node":"Merge3","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"HTTP Request","type":"main","index":0},{"node":"CNPJ-basico","type":"main","index":0}]]},"Merge5":{"main":[[{"node":"Adiciona advogado e relacionados","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Merge5","type":"main","index":1}]]},"Dados Banco Empresa":{"main":[[{"node":"Adiciona endereço","type":"main","index":0}]]},"Adiciona endereço":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Merge4":{"main":[[{"node":"Postgres","type":"main","index":0}]]},"Postgres":{"main":[[{"node":"Padroniza campos","type":"main","index":0}]]},"Padroniza campos":{"main":[[{"node":"Busca Instagram","type":"main","index":0},{"node":"Merge6","type":"main","index":1}]]},"Merge6":{"main":[[{"node":"Busca Relacionados","type":"main","index":0}]]},"Busca Instagram":{"main":[[{"node":"Merge6","type":"main","index":0}]]},"Busca Relacionados":{"main":[[]]},"If":{"main":[[{"node":"Merge4","type":"main","index":0}],[{"node":"Merge5","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"headers":{"host":"n8n-automacao-production.up.railway.app","user-agent":"python-requests/2.32.4","content-length":"176","accept":"*/*","accept-encoding":"gzip, deflate","content-type":"application/json","x-forwarded-for":"162.220.234.11","x-forwarded-host":"n8n-automacao-production.up.railway.app","x-forwarded-proto":"https","x-railway-edge":"railway/us-east4","x-railway-request-id":"srghohMTRMWDNuBSI_kN5A","x-real-ip":"162.220.234.11","x-request-start":"1752259616070"},"params":{},"query":{},"body":{"tipo":"cnpj","nome":null,"documento":"35835392000193","projeto_id":"21","status":"prospeccao","usuario_id":"bd3106d0-cb56-40ff-a31a-d55f1e2b2ecf","projeto":"21"},"webhookUrl":"https://n8n-automacao-production.up.railway.app/webhook/add_stakeholder","executionMode":"production"}}]},"versionId":"f22becdb-e1a1-4d49-8f62-325f64ec0720","triggerCount":1,"tags":[]}